generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  name         String
  email        String    @unique
  password     String
  profileImage String?
  role         String    @default("user") // แนะนำดู enum ด้านล่าง
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  // relations
  posts        Post[]
  comments     Comment[]
  chatMessages ChatMessage[]
}

/// โพสต์ 1 อัน = ข้อความ + รูป (ออปชัน)
model Post {
  id         Int          @id @default(autoincrement())
  author     User         @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId   Int
  content    String
  imageUrl   String?      // /uploads/<filename> ถ้าอัปโหลดรูป
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt

  comments   Comment[]
  chat       ChatMessage[]

  @@index([authorId, createdAt])
  @@index([createdAt])
}

/// คอมเมนต์ใต้โพสต์ (ไม่ realtime)
model Comment {
  id         Int       @id @default(autoincrement())
  post       Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId     Int
  author     User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId   Int
  text       String
  createdAt  DateTime  @default(now())

  @@index([postId, createdAt])
}

/// ข้อความแชทในโพสต์ (realtime ผ่าน Socket.IO)
model ChatMessage {
  id         Int       @id @default(autoincrement())
  post       Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId     Int
  sender     User      @relation(fields: [senderId], references: [id], onDelete: Cascade)
  senderId   Int
  message    String
  createdAt  DateTime  @default(now())

  @@index([postId, createdAt])
}
